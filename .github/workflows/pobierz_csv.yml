name: Pobierz CSV co godzinę

on:
  schedule:
    - cron: '0 * * * *'  # co godzinę
  workflow_dispatch:

jobs:
  fetch-and-commit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT_TOKEN }}
          persist-credentials: true

      - name: Zainstaluj PHP
        run: sudo apt-get install php-cli -y

      - name: Pobierz plik CSV i przetwórz
        run: |
          echo "<?php
          \$url = 'https://102094-5-nadrukinasztuki:0k5X62WD@ws.falk-ross.eu/webservice/R03_000/stockinfo/falkross_de.csv';

          \$ch = curl_init();
          curl_setopt(\$ch, CURLOPT_URL, \$url);
          curl_setopt(\$ch, CURLOPT_RETURNTRANSFER, true);
          curl_setopt(\$ch, CURLOPT_HTTPAUTH, CURLAUTH_BASIC);
          \$response = curl_exec(\$ch);

          if (curl_errno(\$ch)) {
              file_put_contents('curl_error.txt', curl_error(\$ch));
          } else {
              file_put_contents('curl_error.txt', 'Brak błędów CURL');
          }

          curl_close(\$ch);

          file_put_contents('response_raw.txt', \$response);

          \$lines = explode(\"\\n\", \$response);
          file_put_contents('lines_count.txt', count(\$lines));

          array_shift(\$lines);
          file_put_contents('falkross_de_clean.csv', implode(\"\\n\", \$lines));
          ?>" > script.php

          php script.php

      - name: Commit i push zmian
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add falkross_de_clean.csv response_raw.txt curl_error.txt lines_count.txt
          git commit -m "Automatyczna aktualizacja CSV `date`" || echo "Brak zmian do zakomitowania"
          git push
